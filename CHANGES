fslib Changes
===============


v0.3.1: Logging and smoothing of per-vertex data
-------------------------------------------------
* Add `fs::Mesh::construct_grid` function to construct 2D grids.
* Add `fs::Mesh::construct_pyramid` function.
* Add option to control logging via log levels. See API docs main page for usage info.
* Add support for smoothing per-vertex data on meshes, see new function `fs::Mesh::smooth_pvd_nn`.
* Related to `fs::Mesh::smooth_pvd_nn`, add new mesh functions `fs::Mesh::as_adjlist`, `fs::Mesh::as_matrix`, and `fs::Mesh::as_edgeset`.


v0.3.0: Fully documented
-------------------------
* Finish API documentation: all members and functions documented, many with example usage in the doc string.
* Add support for writing FreeSurfer brain meshes in surf format, see function `fs::write_surf`.
* Add support for constructing basic meshes, see `fs::Mesh::construct_cube`. Mainly for examples.
* Add general wrapper function for writing meshes in different formats, auto-detected from file extension, see `fs::write_mesh`.
* BREAKING: Remove duplicate `fs::fullpath` function. Use `fs::util::fullpath` instead.


v0.2.2: Exceptions for the world
---------------------------------
* Add `fs::read_subjectsfile` function.
* Throw exceptions in all places where `exit` was still being called. Document potentially thrown exceptions in function doc strings.
* Fix mesh indexing bug.


v0.2.1: Annot support and much better docs
-------------------------------------------
* Finish rough first version of API documentation.
* Add structs `Annot` and `Colortable` with many convenience member functions that model brain parcellations.
* Add support for reading brain surface parcellations from annot files, see `fs::read_annot` function.
* Add example for reading annot files.


 v0.2.0 Streaming and MGZ support
----------------------------------
* BREAKING: change order of arguments for all functions reading streams.
* BREAKING: rename all `sread_` functions to `read_` and use overloading.
* Add stream-based versions for reading various formats, including MGH. This allows for MGZ support, see `examples/read_mgz/`.
* Add many new member functions to structs and use them throughout the library.
* Add Curv struct and new `fs::read_curv` function that reads into it.
* BREAKING: rename old `fs::read_curv` function that reads only the data part to `fs::read_curv_data`.


 v0.1: Initial release
-----------------------
* Read and write FreeSurfer per-vertex data from and to binary curv format files (like `$SUBJECTS_DIR/surf/lh.thickness`), see `fs::read_curv` function.
* Read FreeSurfer brain surface meshes from binary surf format files (like `$SUBJECTS_DIR/surf/lh.white`), see `fs::read_surf` function.
* Read FreeSurfer ASCII label files (like `$SUBJECTS_DIR/label/lh.cortex.label`), see `fs::read_label` function.
* Read and write FreeSurfer 4D volume files (typically 3D voxels + a fourth time/subject dimension) from binary MGH format files (like `$SUBJECTS_DIR/mri/brain.mgh or $SUBJECTS_DIR/surf/lh.thickness.fwhm5.fsaverage.mgh`).

